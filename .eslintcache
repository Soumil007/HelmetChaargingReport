[{"/home/soumil/Desktop/Altor/helmet-charge-report/src/index.js":"1","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/App/App.jsx":"2","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/HelmetChargeReport/HelmetChargeReport.jsx":"3","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Header/Header.jsx":"4","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Footer/Footer.jsx":"5","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/ViewTickets/ViewTickets.jsx":"6"},{"size":172,"mtime":1608820897827,"results":"7","hashOfConfig":"8"},{"size":4600,"mtime":1608882764498,"results":"9","hashOfConfig":"8"},{"size":7421,"mtime":1609595432600,"results":"10","hashOfConfig":"8"},{"size":307,"mtime":1608879656217,"results":"11","hashOfConfig":"8"},{"size":216,"mtime":1608881124009,"results":"12","hashOfConfig":"8"},{"size":700,"mtime":1609396177939,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"k3hnqb",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/soumil/Desktop/Altor/helmet-charge-report/src/index.js",[],["29","30"],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/App/App.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/HelmetChargeReport/HelmetChargeReport.jsx",["31","32","33","34","35"],"import React, { useEffect, useState } from \"react\";\nimport \"./HelmetChargeReport.css\";\nimport data from \"../data.json\";\nimport helmetlogo from \"./HelmetLogo.png\"\nimport Popup from 'reactjs-popup';\nimport ViewTickets from \"../ViewTickets/ViewTickets\";\nimport Modal from \"react-modal\";\nimport SettingsLogo from \"../images/settingsLogo.png\";\n\nModal.setAppElement('#root')\n\nfunction HelmetChargeReport(){\n    \n    const helmetChargeData = data;\n    const [tickets,setTickets] = useState([]);\n    const [modalIsOpen,setModalIsOpen] = useState(false);\n    const [RTModalIsOpen,SetRTModalIsOpen] = useState(false);\n\n    const makeTicketsArray = () =>{\n\n        \n        let tempArray = [];\n        helmetChargeData.map((helmet)=>{\n            console.log(helmet);\n            \n            // for(var i=0;i<helmet.tickets.length;i++){\n            //     // console.log(helmet.tickets[i]);\n            //     // tickets.push(helmet.tickets[i])\n            //     setTickets((prev)=>[...prev,helmet.tickets[i]]);\n            // }\n            // setTickets((prev)=>[...prev,helmet.tickets.map(ticket=>ticket)]);\n            \n            // helmet.tickets.map(ticket=>{setTickets(prev=>[...prev,ticket])});\n            \n            // tempArray.push(helmet.tickets.map(ticket=>ticket));\n            \n            helmet.tickets.map(ticket=>{tempArray.push(ticket)});\n            setTickets(tempArray);\n            return 0;\n        })\n\n        return 0;\n    }\n\n    \n\n    useEffect(()=>{\n        // tickets=[];\n\n        const vari = makeTicketsArray();\n        \n        console.log(\"useEffect firing\");\n        \n\n    },[helmetChargeData])\n\n    \n\n    console.log(tickets);    \n\n    function handleRaiseTicket(){\n        setModalIsOpen(false);\n        SetRTModalIsOpen(true);\n    }\n\n    return<>\n        <div className=\"helmetReport\">\n            {\n                helmetChargeData.map(helmet=>{\n                    return<div className=\"singleReport\" key={helmet.id}> \n                        <img className=\"HelmetLogo\" src={helmetlogo} alt=\"HelmetLogo\"></img>\n                        <span className=\"helmetId\">{helmet.id}</span>\n                        <span className=\"helmetAttri\">\n                            <span className=\"helmetAttriVal\">{helmet.LastChargedOn}</span><br />\n                            <span className=\"helmetAttriTitle\">Last Charged On</span>\n                        </span>\n                        <span className=\"helmetAttri\">\n                            <span className=\"helmetAttriVal\">{helmet.ChargeDuration}</span><br />\n                            <span className=\"helmetAttriTitle\">Charge Duration</span>\n                        </span>\n                        <span className=\"helmetAttri\">\n                            <span className=\"helmetAttriVal\">{helmet.LastCharge}</span><br />\n                            <span className=\"helmetAttriTitle\">Last Charge</span>\n                        </span>\n                    </div>\n                })\n            }\n\n            {/* Modal for ViewTickets */}\n            <button onClick={()=>setModalIsOpen(true)} className=\"openModal\"><img className=\"SettingsLogo\" src={SettingsLogo} alt=\"SettingsLogo\" style={{width:\"100px\", height:\"100px\",borderRadius:\"100%\",outline:\"none\",boxShadow:\"2px 2px 6px 4px rgba(0,0,0,0.4)\",padding:\"5px\"}}></img></button>\n\n            <Modal \n                isOpen={modalIsOpen}\n                onRequestClose={()=>setModalIsOpen(false)}\n                className=\"viewTicketsModalStyles\"\n                style={{\n                    content:{\n                        boxShadow:\"3px 3px 8px 4px rgba(0,0,0,0.4)\",\n                        borderRadius:\"20px\",\n                        outline:\"none\"\n                    }\n                }}\n            >\n                \n                <h2 className=\"viewTicketHeading\">View Tickets</h2>\n                <hr className=\"headingRuleBar\" style={{marginBottom:\"50px\"}}></hr>\n                <div className=\"viewTickets\">{\n                    tickets.map(ticket=>{\n                        return<>\n                            <div className=\"singleTicket\">\n                                <div>{ticket.ticketDate}</div>\n                                <span style={{borderRight:\"1px solid black\", paddingRight:\"10px\",fontSize:\"24px\",fontWeight:\"600\"}}>\n                                    {ticket.helmetId}\n                                </span>\n                                <span style={{paddingLeft:\"10px\",fontSize:\"24px\",fontWeight:\"600\",color:\"#ff4500\"}}>\n                                    {ticket.ticketText}\n                                </span>\n                                <div style={{marginTop:\"20px\",\n                                backgroundColor:\"#33bb80\",\n                                width:\"152px\",\n                                borderRadius:\"15px\",\n                                padding:\"8px\",\n                                color:\"white\",\n                                fontWeight:\"400\"}}>\n                                    {ticket.ticketResolutionDate!==\"NA\"?\"Resolved, \"+ticket.ticketResolutionDate:\"Resolving\"}\n                                </div>\n                                <div style={{color:\"#33bb80\",marginTop:\"10px\"}}>        \n                                {ticket.ticketResolutionText!==\"NA\"?ticket.ticketResolutionText:\"Work In Progess\"}\n                                </div>        \n                            </div>\n                            <hr></hr>\n                        </>\n                    })\n                }</div>\n                <button onClick={()=>setModalIsOpen(false)} className=\"closeModal\"></button>\n\n                <button className=\"raiseTicketModalBtn\" onClick={handleRaiseTicket}>Raise Ticket</button>\n                \n            </Modal>\n            \n            \n            {/* Modal For Raise Tickets */}\n            <Modal\n                isOpen={RTModalIsOpen}\n                onRequestClose={()=>SetRTModalIsOpen(false)}\n                className=\"viewTicketsModalStyles\"\n                style={{\n                    content:{\n                        boxShadow:\"3px 3px 8px 4px rgba(0,0,0,0.4)\",\n                        borderRadius:\"20px\",\n                        outline:\"none\"\n                    }\n                }}\n            >\n                <h2 className=\"viewTicketHeading\" style={{color:\"#666666\"}}>Create New Ticket</h2>\n                <hr className=\"headingRuleBar\" style={{marginBottom:\"30px\", border:\"2px solid gray\"}}></hr>\n\n                <div className=\"helmetSelection\">\n                    <h3 style={{fontSize:\"24px\",color:\"#ff6666\"}}>Select Helmet</h3>\n                    <select name=\"helmet\" id=\"helmet\" className=\"helmetSelectOption\">\n                        {helmetChargeData.map(helmet=><option>{helmet.id}</option>)}\n                    </select>\n                </div>\n\n                <div className=\"ticketDrescription\">\n                    <h3 style={{fontSize:\"24px\",color:\"#ff6666\"}}>Describe the problem in few words:</h3>\n                    <textarea rows=\"8\" style={{borderRadius:\"20px\", backgroundColor:\"lightgrey\",minWidth:\"72%\", border:\"2px solid gray\"}}></textarea>\n                    <button className=\"createBtn\">Create</button>\n                </div>\n\n                <button onClick={()=>SetRTModalIsOpen(false)} className=\"closeModal\"></button>\n\n            </Modal>\n\n        </div> \n    </>\n\n}\n\nexport default HelmetChargeReport;","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Header/Header.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Footer/Footer.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/ViewTickets/ViewTickets.jsx",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":37,"column":38,"nodeType":"49","messageId":"50","endLine":37,"endColumn":40},{"ruleId":"42","severity":1,"message":"51","line":50,"column":15,"nodeType":"44","messageId":"45","endLine":50,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":55,"column":7,"nodeType":"54","endLine":55,"endColumn":25,"suggestions":"55"},{"ruleId":"38","replacedBy":"56"},{"ruleId":"40","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Popup' is defined but never used.","Identifier","unusedVar","'ViewTickets' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'vari' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeTicketsArray'. Either include it or remove the dependency array.","ArrayExpression",["60"],["58"],["59"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [helmetChargeData, makeTicketsArray]",{"range":"63","text":"64"},[1605,1623],"[helmetChargeData, makeTicketsArray]"]