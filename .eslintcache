[{"/home/soumil/Desktop/Altor/helmet-charge-report/src/index.js":"1","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/App/App.jsx":"2","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/HelmetChargeReport/HelmetChargeReport.jsx":"3","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Header/Header.jsx":"4","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Footer/Footer.jsx":"5","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Navbar/Navbar.jsx":"6","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Home/Home.jsx":"7","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/RiderHelmetHome/RiderHelmetHome.jsx":"8","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Axios.js":"9","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Loading/Loading.jsx":"10"},{"size":255,"mtime":1611299975860,"results":"11","hashOfConfig":"12"},{"size":572,"mtime":1611299995267,"results":"13","hashOfConfig":"12"},{"size":14538,"mtime":1611412422544,"results":"14","hashOfConfig":"12"},{"size":307,"mtime":1608879656217,"results":"15","hashOfConfig":"12"},{"size":216,"mtime":1608881124009,"results":"16","hashOfConfig":"12"},{"size":361,"mtime":1611300160355,"results":"17","hashOfConfig":"12"},{"size":420,"mtime":1611300137607,"results":"18","hashOfConfig":"12"},{"size":5648,"mtime":1611384001157,"results":"19","hashOfConfig":"12"},{"size":291,"mtime":1611299718335,"results":"20","hashOfConfig":"12"},{"size":259,"mtime":1611381445533,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16nxu8r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/soumil/Desktop/Altor/helmet-charge-report/src/index.js",[],["44","45"],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/App/App.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/HelmetChargeReport/HelmetChargeReport.jsx",["46","47","48","49"],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Header/Header.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Footer/Footer.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Navbar/Navbar.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Home/Home.jsx",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/RiderHelmetHome/RiderHelmetHome.jsx",["50"],"import React,{useState,useEffect} from \"react\";\nimport HelmetChargeReport from \"../HelmetChargeReport/HelmetChargeReport\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Loading from \"../Loading/Loading\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport Cookie from \"js-cookie\"\nimport axios from \"../Axios\";\nimport \"./RiderHelmetHome.css\";\n\nfunction App(){\n\n\n    const [helmetReport,setHelmetReport] = useState(null);\n    const [timer,setTimer] =  useState(false);\n    const [processedHelmetData,setHelmetData] = useState([]);\n\n    //fertching data from api\n    async function fetchData(){\n\n        const cookie_content=Cookie.getJSON(\"report_res\");\n        const res = await axios.post(\"/helmet/battery/\",cookie_content);\n        setHelmetReport(res.data.result);\n        // console.log(\"response\");\n        // console.log(res);\n    }\n\n    // console.log(helmetReport);\n\n    useEffect(()=>{\n        fetchData();           \n    },[])\n\n    const convertMmToPx=(mm)=>{\n    \n        return (mm/0.144583);\n    }\n    \n    const convertDomToPDF=()=>{\n       \n        \n        const input = document.getElementById('divToPrint');\n        console.log(input.offsetWidth+\" IS INPUT WIDTH\")\n    \n       \n    \n        var pdf=new jsPDF({\n            orientation: 'p', \n            unit: 'mm', \n            format: [275,297]\n        });\n    \n        \n    \n        html2canvas(input).then((canvas) => {   \n        \n    \n        var ratio=canvas.height/canvas.width;\n\n    \n        var returnableValue=breakIntoChunks(canvas,ratio,pdf);\n        var imgArray=returnableValue.imgArray;\n    \n        imgArray.map((elem,i)=>{\n    \n            pdf.addPage().addImage(elem,'PNG',0,0,pdf.internal.pageSize.getWidth(),(pdf.internal.pageSize.getHeight()));\n            \n            return 0;\n        })\n    \n        pdf.save(\"download.pdf\");\n      \n      });\n    \n    }\n    \n    \n    const breakIntoChunks=(canvas,ratio,pdf)=>{\n    \n        var height=canvas.height;\n    \n        var numOfPages=Math.ceil(height / convertMmToPx(pdf.internal.pageSize.getHeight()) );\n    \n    \n    \n        var imgArray=[];\n    \n        console.log(\"PDF dimensions are\",convertMmToPx(pdf.internal.pageSize.getWidth()),convertMmToPx(pdf.internal.pageSize.getHeight()));\n        console.log(\"Canvas dimensions are \", canvas.width, canvas.height);\n    \n        for(var i=0;i<numOfPages;i++){\n    \n            var newCanvas=document.createElement('canvas');\n            newCanvas.width=convertMmToPx(pdf.internal.pageSize.getWidth());\n            newCanvas.height=convertMmToPx(pdf.internal.pageSize.getHeight());\n    \n    \n            var newContext=newCanvas.getContext('2d');\n            newContext.drawImage(canvas, 0, ((convertMmToPx(pdf.internal.pageSize.getHeight()))*i), (canvas.width), convertMmToPx(pdf.internal.pageSize.getHeight()), 0, 0,convertMmToPx(pdf.internal.pageSize.getWidth()),convertMmToPx(pdf.internal.pageSize.getHeight()));\n    \n            var newImage = document.createElement('img');\n            newImage.src = newCanvas.toDataURL();\n    \n            console.log(\"IMAGE IS AT\"+(( convertMmToPx(pdf.internal.pageSize.getHeight())/numOfPages)*i));\n    \n            imgArray.push(newImage);\n        }\n    \n        const returnableValue={\n            pageSize:(canvas.height/numOfPages),\n            imgArray:imgArray\n        }\n        return returnableValue;   \n    }\n    \n\n    function getSortedChargeLogs(logs){\n        let sortedArr = [];\n        let logsArr = [];\n        for( let date in logs){\n            let singleChargeData = logs[date];\n            singleChargeData.map((uni)=>logsArr.push(uni))\n        }\n        if(logsArr.length>0){\n            sortedArr = logsArr.sort((a,b)=>(new Date(b.start)-new Date(a.start)));\n        }\n        // if(sortedArr.length>0){\n        //     return sortedArr;\n        // }\n        return sortedArr\n    }\n    function makeHelmetData(data){\n        data.map((helmet)=>{\n            let newHelmetData = {\n                \"id\":helmet.device_id,\n                \"inCharge\":helmet.in_charge,\n                \"chargeLogs\":getSortedChargeLogs(helmet.logs)\n            }\n            setHelmetData((prev)=>[...prev,newHelmetData])\n            return 0;\n        })\n    }\n    // console.log(processedHelmetData);\n\n    useEffect(()=>{\n        if(helmetReport!=null){\n            makeHelmetData(helmetReport);\n        }\n        // makeHelmetData(helmetReport)\n        \n    },[helmetReport]);\n    if(processedHelmetData.length!==0){\n        return<>\n\n            <button className=\"downloadButton\" onClick={convertDomToPDF}>Print</button>\n            <div id=\"divToPrint\" className=\"App\" >\n                <Header />\n                <HelmetChargeReport \n                    HelmetReport = {processedHelmetData}\n                />\n                <Footer />\n            </div>\n        </>\n    }else{\n        function start(){\n            setTimer(prevValue=>!prevValue);\n            window.clearTimeout(ErrorTimer);\n        }\n        \n        // ErrorTimer();\n        if(!timer){\n            var ErrorTimer = setTimeout(start,7000);\n            return <Loading />\n        }else{\n            return<div style={{backgroundColor:\"rgb(240, 247, 249)\",display:\"flex\",justifyContent:\"center\",alignContent:\"center\",alignItems:\"center\",\n            textAlign:\"center\",paddingTop:\"307px\"}}>\n                <h1 style={{display:\"flex\", color:\"#e84545\",backgroundColor:\"rgb(240, 247, 249)\",minWidth:\"30vw\",\n                fontSize:\"43px\",maxWidth:\"35vw\"}}>Error!! Problem loading page. Please try again after sometime.</h1>\n            </div>\n        }\n    }\n    \n}\n\nexport default App;","/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Axios.js",[],"/home/soumil/Desktop/Altor/helmet-charge-report/src/components/Loading/Loading.jsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":53,"column":38,"nodeType":"57","messageId":"58","endLine":53,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":64,"column":15,"nodeType":"61","messageId":"62","endLine":64,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":66,"column":7,"nodeType":"65","endLine":66,"endColumn":25,"suggestions":"66"},{"ruleId":"55","severity":1,"message":"67","line":197,"column":51,"nodeType":"57","messageId":"68","endLine":197,"endColumn":53},{"ruleId":"63","severity":1,"message":"69","line":152,"column":7,"nodeType":"65","endLine":152,"endColumn":21,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'vari' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeTicketsArray'. Either include it or remove the dependency array.","ArrayExpression",["73"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'makeHelmetData'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Update the dependencies array to be: [helmetChargeData, makeTicketsArray]",{"range":"79","text":"80"},"Update the dependencies array to be: [helmetReport, makeHelmetData]",{"range":"81","text":"82"},[2072,2090],"[helmetChargeData, makeTicketsArray]",[4449,4463],"[helmetReport, makeHelmetData]"]